[{"path":"index.html","id":"Introduction","chapter":"前言","heading":"前言","text":"大家好，这本书是一份零基础系统性学习R语言的学习笔记。\n","code":""},{"path":"index.html","id":"goal","chapter":"前言","heading":"写作目的","text":"作者本人是一枚生物信息学专业入门小白，在平时的工作学习中经常需要使用计算机程序语言来分析和处理数据，因此需要寻找一种简洁高效的语法来记录学习的过程，在学习R语言的过程中发现R中的rmarkdown\n语法很适合用来记录这种文中需要插入代码的笔记，因此最终选择了R中的bookdown\n包来记录R语言的学习笔记。在创作这本书之前，本人学习R语言采用的是learn ,即“边做边学”或者“在做中学”的学习模式，需要用到什么功能就去网上直接google相关代码，然后复制粘贴，这种以实践为导向的学习方法的确能够快速解决学习者当前所面临的问题，但它的缺点也很明显：知其然而不知其所以然，不能够系统全面地从底层掌握R语言的使用技巧，遇到问题也不能又快又好地解决，因此我决定利用空闲时间系统化地学习R语言，为以后进一步实现R语言的高级应用打下坚实基础。","code":""},{"path":"index.html","id":"about-R","chapter":"前言","heading":"关于R","text":"看到这本书人想必已经了解，至少听说过R语言是什么了（R语言简介），就我个人的理解，R语言是一款带有强大可视化功能的统计学软件，在科学研究的数据分析中具有极高的应用价值，因为几乎所有的自然科学的研究发展都离不开统计学，没有统计学支撑的分析结果是没有说服力的，而R语言最擅长的便是统计学，R的资源库，例如R综合档案网络（CRAN）中还包含了大量的适合各个专业领域分析的R包,并且能够快速方便地用代码生成出版级的高清图片，极大地提高了科学研究的效率，因此我建议无论是否是计算机相关专业的朋友，都可以学一点R语言，它绝对不会让你后悔。","code":""},{"path":"index.html","id":"about-the-Book","chapter":"前言","heading":"关于本书","text":"鉴于本人能力有限，没有过多的时间和精力去阅读国外大神写的R语言原著（见 推荐书目），在学R的过程中使用的教材主要是四川师范大学物理学博士王敏杰老师的《数据科学中的R语言》,以及北京大学数学科学学院副教授李东风老师的《R语言教程》,严格意义上来说属于二次创作，书中难免会出现理解不到位的地方，欢迎大家随时批评指正。","code":""},{"path":"index.html","id":"reference-books","chapter":"前言","heading":"参考书目","text":"《数据科学中的R语言》《R语言教程》","code":""},{"path":"index.html","id":"recommend-books","chapter":"前言","heading":"推荐书目","text":"R Data Science: Import, Tidy, Transform, Visualize, Model Data.(Wickham, Çetinkaya-Rundel, Grolemund 2023)R Action, Third Edition: Data Analysis Graphics r Tidyverse. (Kabacoff 2022)Ggplot2: Elegant Graphics Data Analysis.(Wickham 2016)","code":""},{"path":"index.html","id":"致谢","chapter":"前言","heading":"致谢","text":"感谢在此书编写过程中帮助过我的老师，同学，以及其他朋友，没有大家的关照我几乎不可能完成如此复杂艰巨的工作，感谢！","code":""},{"path":"作者简介.html","id":"作者简介","chapter":"作者简介","heading":"作者简介","text":"欧阳继华，男，中山大学（https://www.sysu.edu.cn）生物信息学专业在读硕士，热爱学习，对 R, python，perl等程序语言的学习和使用十分感兴趣，长期致力于办公自动化以及提高科学研究高效性和可重复性的研究，欢迎志同道合的朋友与我交流讨论。联系方式：ouyjh6@mail2.sysu.edu.cn","code":""},{"path":"DataScience-and-R.html","id":"DataScience-and-R","chapter":"1 数据科学与R语言","heading":"1 数据科学与R语言","text":"","code":""},{"path":"DataScience-and-R.html","id":"DataScience","chapter":"1 数据科学与R语言","heading":"1.1 数据科学","text":"一门科学只有当它达到了能够成功地运用数学时，才算真正发展了。\n图1.1: 马克思数学手稿（1974年版）\n马克思数学手稿（Mathematical Manuscripts Karl Marx）是19世纪德国哲学家、经济学家、社会学家卡尔·马克思（Karl Marx）在1841年至1843年期间撰写的一些数学笔记和手稿。这些手稿在马克思生前未出版，直到1968年才首次出版,其涉及的主题包括微积分、微分方程、代数和几何学等。马克思对数学的研究主要是为了帮助他理解自然科学和经济学，他试图将数学的方法应用于社会科学，以便更好地理解社会经济现象的规律。数学作为一门基础学科，它的思维方式和工具方法能够为各个科学领域提供重要的支持和指导，如果一门科学没有数学，那么它很可能是一个相对较为表面的科学，难以深入理解和研究，例如，物理学需要数学来描述自然现象，如牛顿力学和爱因斯坦相对论需要微积分和张量分析等数学工具;化学需要数学来解决复杂的反应和分子结构，如量子化学和化学动力学需要统计学和微分方程等数学方法;生物学需要数学来研究生物系统的行为，如生态学和生物信息学需要统计学和图论等数学手段。我打小数学就不太行，高考数学更是直接拉了后腿，因此一直很佩服那些数学厉害的人，记得我的高中数学老师曾说过“数学是思维的体操”，’ll say ! （个人认为）数学思维强的人智商一般都比较高，反应能力和逻辑推理能力也都会比较强，这些人相对而言更容易在自然科学领域做出瞩目的成果，最近在看Linus的传记(Torvalds Diamond 2002)，他打小就是那种数学特别厉害的人，加上他对编程和操作系统疯狂的痴迷，这些因素最终让他能够开发出那个非凡的Linux操作系统！言归正传，什么是数据科学？\n数据科学是一种使用统计学、计算机科学和领域知识来分析和理解数据的跨学科领域。它涉及从大量数据中提取有用信息、探索和分析数据，以便为组织和决策者提供有意义的见解。\n(这个 ChatGPT (2022) 给出的概念简单看一下就可以了，以后在实践中再慢慢体会吧.)\n一句非常重要的话： 编程是工具，统计是灵魂，专业是核心\n无论使用什么方法或工具，这些都只是解决问题的手段而已，你所要解决的问题才是你自始至终最应该关注的核心，千万不能本末倒置！","code":"                                                          ———— 卡尔·马克思"},{"path":"DataScience-and-R.html","id":"R_intro_install","chapter":"1 数据科学与R语言","heading":"1.2 R语言简介","text":"R的起源\n1992年，新西兰奥克兰大学统计学教授 Ross Ihaka 和 Robert Gentleman，为了方便地给学生教授统计学课程，他们设计开发了R语言（他们名字的首字母都是R）。R的特色R是一个统计编程语言（statistical programming）R可运行于多种平台之上，包括Windows、UNIX 和 Mac OS XR拥有顶尖水准的制图功能R是免费的R应用广泛，拥有丰富的库包活跃的社区\n图1.2: tidyverse运行流程\n如图1.2所示，即数据导入、数据规整、数据处理、可视化、建模以及形成可重复性报告，整个分析和探索过程都在一个程序代码中完成，这种方式对训练我们的数据思维非常有帮助。tidyverse是R语言中的一个数据科学工具包集合，由Hadley Wickham及其团队开发，旨在提供一系列易于使用且功能强大的数据分析工具。tidyverse包含了多个互相协作的包，包括了ggplot2、dplyr、tidyr、readr、purrr等等。这些包都遵循了相同的设计哲学和编程风格，以及一些共同的数据结构和函数，使得用户可以通过一致的方式来进行数据清洗、转换、可视化和建模等操作。tidyverse套餐：从下一章开始，我们将正式开始R语言的学习之旅！","code":""},{"path":"DataScience-and-R.html","id":"总结","chapter":"1 数据科学与R语言","heading":"总结","text":"本节的主要内容：简单介绍数据科学的概念简单介绍R以及tidyverse包","code":""},{"path":"R-installation.html","id":"R-installation","chapter":"2 R的安装与环境的配置","heading":"2 R的安装与环境的配置","text":"R语言是一款完全免费且开源的软件，它的开源许可证是GNU通用公共许可证（GPL），这意味着任何人都可以自由地使用、复制、修改和发布R语言的源代码，甚至可以将其用于商业用途。\n图1.1: GPL第三版图标\n和python等其他语言一样，使用R语言来工作首先需要准备好R语言的解释器和编辑器。解释器（Interpreter）是一种程序，可以解释和执行源代码。当你运行一个使用解释器编写的程序时，解释器会逐行解释源代码，并将其转换为计算机可以理解的语言，然后立即执行,这意味着开发人员可以通过逐行调试程序，快速查找和修复错误。编辑器（Editor）则是一种用于编写和编辑代码的程序。它提供了一种方便的方式来编辑源代码，包括高亮显示语法、自动完成和代码折叠等功能。编辑器还可以帮助开发人员在程序中添加注释、格式化代码等，从而提高代码的可读性和可维护性。集成开发环境（Integrated Development Environment，IDE）是一种更为全面的开发工具，它包含了编辑器以外的多个工具，如调试器、编译器、版本控制等等，这些工具可以协同工作，提高开发效率。IDE通常支持多种编程语言，并提供了许多与开发相关的功能，如代码自动完成、集成式调试、图形化界面设计器等等。R语言的解释器就是R,而R代码的编写我们推荐使用主流的IDE—RStudio,如果你熟悉python等其他语言的话，应该很容易理解R和Rstudio的关系就好比python和Pycharm的关系，不过不同的是，python的编辑器有很多，除了Pycharm外还有VS code,Eclipse,Sublime等等，而R的编辑器最主要的就是Rstudio，甚至我都没有听过R有什么其他的编辑器（也有可能是我孤陋寡闻了），原因很简单，Rstudio作为一款非常成熟和优秀的软件已经在R语言IDE中占据了主导地位！\n我们来看看它的官网介绍：Used millions people weekly, RStudio integrated development environment (IDE) set tools built help productive R Python. includes console, syntax-highlighting editor supports direct code execution. also features tools plotting, viewing history, debugging managing workspace.接下来，就让我们在自己的电脑上安装R和RStudio吧！","code":""},{"path":"R-installation.html","id":"R_interpreter","chapter":"2 R的安装与环境的配置","heading":"2.1 安装R","text":"R的安装特别简单，和在电脑上安装其他应用程序几乎没有什么区别，可以直接在官网https://cloud.r-project.org/上下载自己电脑配置对应的R版本：\n图2.1: 验证R是否安装成功\n怎么样，是不是超级简单！\n接下来我们进行R的IDE——RStudio的安装。","code":""},{"path":"R-installation.html","id":"rstudio_installation","chapter":"2 R的安装与环境的配置","heading":"2.2 安装RStudio","text":"RStudio的安装比R的安装稍微复杂一点点，不过也很简单！\n同样，先去RStudio官网下载适合自己电脑的桌面版软件，然后执行安装程序。\n图2.2: 下载RStudio\n一些其他人给出的RStudio在安装过程中的注意事项：电脑开机时的用户名不要用中文，否则Rstudio可能会杠上中文用户名尽量安装在非系统盘，比如，可以选择安装在D盘安装路径不要有中文和空格。比如，这样就比较好\nD:/R\nD:/Rstudio\nD:/RD:/Rstudio上面出现的问题并不一定会出现，但是我们能避免就尽量避免，毕竟君子不立于危墙之下嘛。","code":""},{"path":"R-installation.html","id":"RStudio_configuration","chapter":"2 R的安装与环境的配置","heading":"2.3 RStudio的基本配置","text":"安装完RStudio之后先别急着使用，我们先做一些简单的设置：","code":""},{"path":"R-installation.html","id":"change-mirror","chapter":"2 R的安装与环境的配置","heading":"2.3.1 更改镜像源","text":"RStudio默认的镜像源是国外的CRAN,可能会导致下载速度慢甚至下载失败，我们可以将其改成国内镜像源，操作方法： 进入RStudio界面后，选择 Tools > Global options > packages > Change，然后选择一个离自身位置最近的镜像即可。\n图2.3: RStudio更改镜像源\n在这里，我选择了自身所在的广州的镜像作为RStudio镜像源。","code":""},{"path":"R-installation.html","id":"change-code","chapter":"2 R的安装与环境的配置","heading":"2.3.2 更改字符编码","text":"\n图2.4: RStudio更改编码方式\n","code":""},{"path":"R-installation.html","id":"change-appearance","chapter":"2 R的安装与环境的配置","heading":"2.3.3 更改外观","text":"RStudio当然具备更改编辑器外观的功能，选择Tools > Global options > Appearance\n图2.5: RStudio更改编码方式\n在这里可以选择自己喜欢的主题，字体，字体大小，编码风格等。","code":""},{"path":"R-installation.html","id":"other_problems","chapter":"2 R的安装与环境的配置","heading":"2.3.4 其他问题","text":"如果显示我的系统不能兼容64位的RStudio，可以在https://rstudio.com/products/rstudio/older-versions/上找到旧的版本用户名为中文名时可能会导致RStudio无法正常运行，这时建议新建一个账户用于安装RStudio若RStudio长时间使用后变得卡顿，可以在Tools > Global options > General中关闭相关的自动储存选项。","code":""},{"path":"R-installation.html","id":"how-to-use-rstudio","chapter":"2 R的安装与环境的配置","heading":"2.4 RStudio的使用","text":"光说不练假把式，下面我们来简单介绍一下RStudio的基本使用（阅读本节的过程中请打开自己的RStudio对照着练习）。","code":""},{"path":"R-installation.html","id":"operation-panel","chapter":"2 R的安装与环境的配置","heading":"2.4.1 操作界面","text":"打开RStudio,显示界面如下：\n图2.6: RStudio操作界面\n如图2.6所示，RStudio的操作界面可分为四个面板：左上角是Editor窗口，用来编写代码左下角是Console窗口，可以键入命令右上角是Environment和History窗口，保存当前存储的数据和历史命令记录等右下角是Plot和Help窗口，用于显示绘制图片和帮助文档想要运行一段代码，直接在左下角的console输入，然后按换行键即可。","code":"\n1+1## [1] 2"},{"path":"R-installation.html","id":"script-run","chapter":"2 R的安装与环境的配置","heading":"2.4.2 运行脚本","text":"\n图2.7: RStudio创建脚本\n如何运行脚本？运行单行脚本 将光标移至该单行，点击右上角Run键，或者在键盘上按下Ctrl+Enter键运行多行脚本 用光标选中所要运行的脚本，点击右上角的Run键，或者在键盘上按下Ctrl+Enter键运行全部脚本\n点击右上角的Source键，或者在键盘上按下Ctrl+shift+Enter键写好的脚本可以使用Ctrl + S 保存在指定位置，下次需要使用时直接打开运行即可。","code":""},{"path":"R-installation.html","id":"RStudio-shortcut-key","chapter":"2 R的安装与环境的配置","heading":"2.4.3 RStudio中常用的快捷键","text":"","code":""},{"path":"R-installation.html","id":"总结-1","chapter":"2 R的安装与环境的配置","heading":"2.5 总结","text":"本节的主要内容：安装R安装RStudioRStudio的基本使用","code":""},{"path":"object-variable.html","id":"object-variable","chapter":"3 对象与变量","heading":"3 对象与变量","text":"","code":""},{"path":"object-variable.html","id":"primary-calculation","chapter":"3 对象与变量","heading":"3.1 基本运算","text":"可以把R语言当做计算器使用：","code":"\n1 + 2## [1] 3\n5 - 3## [1] 2\n3 * 4## [1] 12\n12 / 3## [1] 4\n2^3## [1] 8\n(2 + 4) / 3## [1] 2"},{"path":"object-variable.html","id":"object","chapter":"3 对象与变量","heading":"3.2 对象","text":"在R中存储的数据称为对象（object），R语言数据处理实际上就是不断的创建和操控这些对象,对象可以理解成用来装数据和函数的盒子或容器（container）。\n和python类似，R语言也可以被理解成一种面向对象的编程语言\n图3.1: R语言中的赋值操作\n如图3.1所示，创建一个R对象，首先确定一个名称，然后使用赋值操作符 <-，将数据赋值给它。（Windows操作系统中赋值的符号可以使用快捷键：ALT + -）","code":""},{"path":"object-variable.html","id":"variable","chapter":"3 对象与变量","heading":"3.3 变量","text":"这里的R对象在计算机编程语言中称之为变量（variable），和其他编程语言类似，R语言中的变量也有自己的命名规则：变量名必须以字母、数字、下划线_和句点.组成变量名的第一个字符不能为数字变量名的第一个字符如果是句点.，那么句点后面不能紧跟数字变量名是区分大小写的，y和Y是两个不同的变量名在中文环境下，汉字也可以作为变量名的合法字符使用，但不推荐使用举例：\n1. 赋值变量打印变量3.使用变量","code":"\nx <- 10\nx## [1] 10\nx + 90## [1] 100"},{"path":"object-variable.html","id":"attribute-type","chapter":"3 对象与变量","heading":"3.4 变量的属性和类型","text":"变量类型\n所有R对象都有其属性，其中最重要的两个属性是类型和长度,查看变量的类型可以使用typeof和class函数：在R语言中，double类型是双精度浮点数的类型。它代表一个十进制数，并且保留了一定的小数位数（通常是15到17位）。double类型是最常用的数值数据类型，因为它们可以用于处理小数值和大数值。在计算中，它们是高精度数字，因此适用于科学计算，统计学和工程应用。关于class和typeof两个函数的区别如下：\n1. typeof() 函数：\ntypeof() 函数用于获取对象的基本类型信息，返回一个描述对象类型的字符字符串。\n它通常用于确定对象的基本存储类型，例如 “double”（双精度浮点数）、“integer”（整数）、“character”（字符）、“logical”（逻辑值）等。\n对于大多数常见的对象类型，typeof() 函数可以给出准确的类型信息，但在某些情况下可能不够详细。\n2. class() 函数：\nclass() 函数用于获取对象的类别信息，返回一个描述对象类别的字符字符串或字符向量。\n它通常用于确定对象的高级类型，即对象所属的类别或类。\n在面向对象编程中，对象的类别定义了对象的属性和方法。通过 class() 函数，你可以确定对象是属于哪个类别，并调用与该类别相关联的方法。\n对于基本数据类型（如数字、字符、逻辑值）或没有明确的类别的对象，class() 函数可能返回一个空字符向量。R语言中的变量类型包括以下几种：数值型（Numeric）：用于表示数值的变量类型，包括整数和浮点数。整数型（Integer）：用于表示整数的变量类型。字符型（Character）：用于表示文本字符串的变量类型。逻辑型（Logical）：用于表示逻辑值（真或假）的变量类型。复数型（Complex）：用于表示复数的变量类型。因子型（Factor）：用于表示分类变量的变量类型，具有有限个数的离散取值。日期型（Date）：用于表示日期的变量类型。时间型（POSIXct）：用于表示日期和时间的变量类型。时间型（POSIXlt）：用于表示日期和时间的变量类型，以列表形式存储。数组型（Array）：用于存储多维数据的变量类型。矩阵型（Matrix）：用于存储二维数据的变量类型。列表型（List）：用于存储不同类型元素的变量类型。数据框型（Data Frame）：用于存储二维表格数据的变量类型，类似于表格或数据库中的数据结构。获取变量的长度\n对于变量来说最重要的属性除了它的类型外还有它的长度，可以使用length函数来确定变量的长度。","code":"\ntypeof(x)## [1] \"double\"\nclass(x)## [1] \"numeric\"\nlength(x)## [1] 1"},{"path":"object-variable.html","id":"总结-2","chapter":"3 对象与变量","heading":"3.5 总结","text":"介绍了R的计算功能介绍了R中对象和变量的概念以及变量的命名规则介绍了R中变量的属性，及其类型和长度的查看方法","code":""},{"path":"data-structure.html","id":"data-structure","chapter":"4 数据基本结构","heading":"4 数据基本结构","text":"前面我们已经介绍过向量，它是R中最基本的数据结构，这章我们来认识一下R中其他几种常见的数据结构矩阵列表数据框","code":""},{"path":"data-structure.html","id":"matrix","chapter":"4 数据基本结构","heading":"4.1 矩阵","text":"矩阵可以存储行(row)和列(column)二维的数据。它实际上是向量的另一种表现形式，也就说它的本质还是向量，一维的向量用二维的方式呈现。\n在R语言中通过matrix函数来创建矩阵：默认矩阵的排列方向是按列从左往右排列，当然，也可以按行从上往下排列，只需要添加byrow参数即可：矩阵的相关属性如下：个人理解：矩阵其实就是将一维的向量平铺开来，展示成二维的形式，所以矩阵中的元素全部是同一类型的。","code":"\nmatrix(c(2,4,6,3,7,8), nrow = 2, ncol = 3)##      [,1] [,2] [,3]\n## [1,]    2    6    7\n## [2,]    4    3    8\nmatrix(c(2,4,6,3,7,8), nrow = 2, ncol = 3, byrow = TRUE)##      [,1] [,2] [,3]\n## [1,]    2    4    6\n## [2,]    3    7    8\nm <- matrix(c(2,4,6,3,7,8), nrow = 2, ncol = 3)\nclass(m)## [1] \"matrix\" \"array\"\nlength(m)## [1] 6\ndim(m)#矩阵的维度## [1] 2 3"},{"path":"data-structure.html","id":"list","chapter":"4 数据基本结构","heading":"4.2 列表","text":"列表可以理解成多个向量的集合。\n在R中可以使用list函数来创建列表：列表的属性如下：","code":"\nlist1 <- list(\n  a = c(5, 10),\n  b = c(\"I\", \"love\", \"R\", \"language\", \"!\"),\n  c = c(TRUE, TRUE, FALSE, TRUE)\n)\nlist1## $a\n## [1]  5 10\n## \n## $b\n## [1] \"I\"        \"love\"     \"R\"        \"language\" \"!\"       \n## \n## $c\n## [1]  TRUE  TRUE FALSE  TRUE\nclass(list1)## [1] \"list\"\nlength(list1)## [1] 3"},{"path":"data-structure.html","id":"dataframe","chapter":"4 数据基本结构","heading":"4.3 数据框","text":"数据框其实是一种特殊形式的列表，即如果列表中的元素是等长的向量那么这样的列表就是一个数据框。数据框类似于我们经常用的excel表格，由于数据框融合了向量、列表和矩阵的特性，所以在数据科学的统计建模和可视化中运用非常广泛。\n在R中，使用data.frame函数来创建数据框：数据框的属性如下：","code":"\ndf <- data.frame(\n  name      = c(\"Alice\", \"Bob\", \"Carl\", \"Dave\"),\n  age       = c(23, 34, 23, 25),\n  marriage  = c(TRUE, FALSE, TRUE, FALSE),\n  color     = c(\"red\", \"blue\", \"orange\", \"purple\")\n)\ndf##    name age marriage  color\n## 1 Alice  23     TRUE    red\n## 2   Bob  34    FALSE   blue\n## 3  Carl  23     TRUE orange\n## 4  Dave  25    FALSE purple\nclass(df)## [1] \"data.frame\"\nnrow(df)## [1] 4\nncol(df)## [1] 4"},{"path":"data-structure.html","id":"总结-3","chapter":"4 数据基本结构","heading":"4.4 总结","text":"介绍了矩阵的定义，创建方法，属性介绍了列表的定义，创建方法，属性介绍了数据框的定义，创建方法，属性（重点）","code":""},{"path":"参考文献.html","id":"参考文献","chapter":"参考文献","heading":"参考文献","text":"","code":""}]
